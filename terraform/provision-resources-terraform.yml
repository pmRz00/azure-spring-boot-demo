# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Provision Resources

variables:
- group: azure-environment-terraform

parameters:
- name: location
  default: westus2

trigger: none

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: $(Build.Repository.LocalPath)/terraform
    backendServiceArm: '$(SERVICE_CONNECTION_NAME)'
    backendAzureRmResourceGroupName: '$(REMOTE_BACKEND_RESOURCE_GROUP)'
    backendAzureRmStorageAccountName: '$(REMOTE_BACKEND_STORAGE_ACCOUNT)'
    backendAzureRmContainerName: '$(REMOTE_BACKEND_CONTAINER_NAME)'
    backendAzureRmKey: '$(REMOTE_BACKEND_STORAGE_KEY)'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '-auto-approve -var resource_group=$(RESOURCE_GROUP) -var spring_cloud_service=$(SPRING_CLOUD_NAME) -var mysql_server_admin_password=$(MYSQL_PASSWORD)'
    environmentServiceNameAzureRM: '$(SERVICE_CONNECTION_NAME)'
    workingDirectory: $(Build.Repository.LocalPath)/terraform
